from random import randint
from pathlib import Path

from aiogram.filters import CommandStart, Command, or_f
from aiogram.types import FSInputFile
from aiogram import types, Router, Bot, F
from aiogram.utils.formatting import as_list, as_marked_section, Bold

from filters.chat_types import ChatTypeFilter
from keyboards import reply
from keyboards.reply import get_keyboard

user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(['private']))


def choose_pic_Nikita_Igorevich():
    return FSInputFile(f'Cats/{randint(1, len(list(Path("Cats").iterdir())))}.jpg')


@user_private_router.message(CommandStart())
async def start_cmd_Nikita_Igorevich(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∏–π —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –∫–æ—Ç–∏–∫–æ–≤! –ù–∞–ø–∏—à–∏ –º–Ω–µ "–•–æ—á—É –∫–æ—Ç–∏–∫–∞" '
                         '–∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –∫–æ—Ç–∏–∫–∞!',
                         reply_markup=get_keyboard(
                             "–ú–µ–Ω—é",
                             "–û –±–æ—Ç–µ",
                             "–î–æ–Ω–∞—Ç",
                             "GitHub",
                             placeholder="–ß—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ? –ö–æ—Ç–∏–∫–∞?",
                             sizes=(2, 2)
                         ),
    )


@user_private_router.message(or_f(Command('menu'), (F.text.lower() == '–º–µ–Ω—é')))
async def menu_cmd(message: types.Message):
    await message.answer('–í–æ—Ç –º–µ–Ω—é')


@user_private_router.message(F.contact)
async def get_contact(message: types.Message):
    await message.answer(f'–ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω üòç')
    await message.answer(str(message.contact))


@user_private_router.message(F.location)
async def get_contact(message: types.Message):
    await message.answer(f'–õ–æ–∫–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞ üòç')
    await message.answer(str(message.location))


@user_private_router.message((F.text.lower() == "–æ –Ω–∞—Å") | (F.text.lower() == '–æ –±–æ—Ç–µ'))
@user_private_router.message(Command('about'))
async def about_cmd(message: types.Message):
    await message.answer('–Ø –±–æ—Ç! –Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–±–µ –∫–æ—Ç–∏–∫–∞ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, —á—Ç–æ-—Ç–æ –µ—â—ë, –Ω–æ –º–æ–π –∫–æ–¥–µ—Ä –ª–µ–Ω–∏–≤—ã–π '
                         '–∏ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª –æ–± —ç—Ç–æ —Ç—É—Ç. –Ø –µ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–Ω—É –Ω–∞ —ç—Ç–æ—Ç —Å—á—ë—Ç! –ü–æ—Å–º–æ—Ç—Ä–∏ –ø–æ–∫–∞ –∫–æ—Ç–∏–∫–∞!')


@user_private_router.message((F.text.lower().contains('–¥–æ–Ω–∞—Ç')) | (F.text.lower() == '–¥–æ–Ω–∞—Ç'))
@user_private_router.message(Command('donate'))
async def donate_cmd(message: types.Message):
    text = as_list(
        as_marked_section(
            Bold("–í–∞—Ä–∏–∞–Ω—Ç—ã –¥–æ–Ω–∞—Ç–∞:"),
            "–ë—É—Å—Ç–∏",
            "–ü–∞—Ç—Ä–µ–æ–Ω",
            "–ù–∞ –ö–∞—Å–ø–∏/–°–±–µ—Ä–û–Ω–ª–∞–π–Ω –ø–µ—Ä–µ–≤–µ–¥–∏, –µ—Å–ª–∏ –∫–∞–π—Ñ",
            marker='‚òëÔ∏è ',
        ),
        as_marked_section(
            Bold('–ù–µ–ª—å–∑—è: '),
            '–ó–∞–∫–∏–Ω—É—Ç—å –Ω–∞ QIWI (RIP)',
            '–ó–∞–∫–∏–Ω—É—Ç—å –Ω–∞ –°–±–µ—Ä–ö–Ω–∏–∂–∫—É',
            '–†–∞—Å–ø–ª–∞—Ç–∏—Ç—å—Å—è –Ω–∞—Ç—É—Ä–æ–π',
            marker='‚õîÔ∏è ',
        ),
        sep='\n------------------\n'
    )
    await message.answer(text.as_html())


@user_private_router.message((F.text.lower() == '–≥–∏—Ç') | (F.text.lower() == 'github'))
@user_private_router.message(Command('git'))
async def git_cmd(message: types.Message):
    await message.answer('https://github.com/LibinoNK/RandomCatBot-Fun-/blob/main/main.py')


@user_private_router.message(F.photo)
async def photo_cmd(message: types.Message, bot: Bot):
    await message.answer('–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! –ï—Å–ª–∏ —ç—Ç–æ –∫–æ—Ç–∏–∫ –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –ë–æ–≥—É –∫–æ—Ç—è—á—å–µ–≥–æ —Ä–∞–Ω–¥–æ–º–∞, '
                         '—Ç–æ –æ–Ω —Ä–∞–Ω–æ –∏–ª–∏ –ø–æ–∑–¥–Ω–æ –ø–æ–ø–∞–¥–µ—Ç –≤ –ø–æ–¥–±–æ—Ä–∫—É!')
    await bot.download(
        message.photo[-1],
        destination=f"/Users/libino/Desktop/–£—á–µ–±–∞/EndProject/New_Cats/{message.photo[-1].file_id}.jpg"
    )


@user_private_router.message()
async def answer_Nikita_Igorevich(message: types.Message, bot: Bot):
    text: str | None = message.text
    if text.lower() in ['–ø—Ä–∏–≤–µ—Ç', 'hi', 'hello']:
        await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π!')
    elif text.lower() in ['–ø–æ–∫–∞', 'bue', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è']:
        await message.answer('–î–æ –≤—Å—Ç—Ä–µ—á–∏!')
    elif text.lower() in ['–≥–ª–∞–≤–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∂–∏–∑–Ω–∏, –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –≤–æ–æ–±—â–µ', '—Å–º—ã—Å–ª –∂–∏–∑–Ω–∏']:
        await message.answer('42')
    elif text.lower() == '—Ö–æ—á—É –∫–æ—Ç–∏–∫–∞':
        await bot.send_photo(chat_id=message.chat.id, photo=choose_pic_Nikita_Igorevich())
    else:
        await message.answer('–ò–∑–≤–∏–Ω–∏, —è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ü–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ :3')
        # await message.answer(message.text) # echo
